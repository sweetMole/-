//注意有|的正则最好括起来,表示一个整体.否则可能出现开头部分匹配即true(例如:decmal未加括号匹配"122TTT"()返回true的问题
//这里浮点数的验证不包括整数,如无法通过验证,需加括号.
var regexEnum = {
	intege : "^(-?[1-9]\\d*)$", // 整数
	intege1 : "^([1-9]\\d*)$", // 正整数
	intege2 : "^(-[1-9]\\d*)$", // 负整数
	intege3 : "^([1-9]\\d*|0)?$", // 正数（正整数 + 0）或空
	num : "^(([+-]?)\\d*\\.?\\d+)$", // 数字
	num1 : "^([1-9]\\d*|0)$", // 正数（正整数 + 0）
	num2 : "^(-[1-9]\\d*|0)$", // 负数（负整数 + 0）
	num3 : "^([1-9]\\d*\\.?\\d*|0\\.\\d*[1-9]\\d*)$", // 正整数或正浮点数
	num4 : "^-([1-9]\\d*\\.?\\d*|0\\.\\d*[1-9]\\d*)$", // 负整数或负浮点数
	num5 : "^(([1-9]\\d*(\\.[0-9]*[1-9])?)|(0\\.[0-9]*[1-9])|0)$",// 大于等于0
	num6 : "^(0|[1-9]\\d{0,9})(\\.\\d{1,3})?$",//浮点数,最大10位整数，3位小数
	decmal : "^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$", // 浮点数,仍有点问题的
	decmal1 : "^([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$", // 正浮点数
	decmal2 : "^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$", // 负浮点数
	// decmal3:"^-?([1-9]\\\d*.\\\d*|0.\\\d*[1-9]\\\d*|0?.0+|0)$", //浮点数
	decmal4 : "^([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$", // 非负浮点数（正浮点数或0）
	decmal5 : "^((-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0)$", // 非正浮点数（负浮点数或0）
	intStr : "^\\d+$", // 字符型正整数,可以以0开头的
	email : "^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$", // 邮件
	color : "^[a-fA-F0-9]{6}$", // 颜色
	url : "^http[s]?:\\/\\/([\\w-]+\\.)+[\\w-]+([\\w-./?%&=]*)?$", // url
	chinese : "^[\\u4E00-\\u9FA5\\uF900-\\uFA2D]+$", // 仅中文
	ascii : "^[\\x00-\\xFF]+$", // 仅ACSII字符
	zipcode : "^\\d{6}$", // 邮编
	mobile : "^(1[38][0-9]{9}|15[0-9]{9}|1(4[57]|7[03678]|66|9[13589])[0-9]{8})$", // 手机,增加173,176,177,178,166,19[13589]开头的手机号
	ip4 : "^(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)$", // ip地址
	notempty : "^\\S+$", // 非空
	picture : "(.*)\\.(jpg|bmp|gif|ico|pcx|jpeg|tif|png|raw|tga)$", // 图片
	rar : "(.*)\\.(rar|zip|7zip|tgz)$", // 压缩文件
	date : "^\\d{4}(\\-|\\/|\.)\\d{1,2}\\1\\d{1,2}$", // 日期
	qq : "^[1-9]*[1-9][0-9]*$", // QQ号码
	tel : "^(([0\\+]\\d{2,3}-)?(0\\d{2,3})-)?(\\d{7,8})(-(\\d{3,12}))?$", // 电话号码的函数(包括验证国内区号,国际区号,分机号),区号后面可以不填-
	username : "^\\w+$", // 用来用户注册。匹配由数字、26个英文字母或者下划线组成的字符串
	letter : "^[A-Za-z]+$", // 字母
	letter_u : "^[A-Z]+$", // 大写字母
	letter_l : "^[a-z]+$", // 小写字母
	idcard : "^[1-9]([0-9]{14}|[0-9]{17})$", // 身份证
	gatxz : "^[HM]\\d{10}$", // 港澳通行证
	tybm : "^(([A-HJ-NPQRTUW-Y0-9]{2}\\d{6}[A-HJ-NPQRTUW-Y0-9]{10})|(\\d{15})|([0-9A-Z]\\d{7}[-][0-9A-Z]))$", // 统一社会信用代码或工商营业执照号码15位数字或组织机构代码(前1位为字母或数字+7位数字+横杠(-)+1位大写字母)syj20171026增加工商营业执照
	special : "^[A-Za-z0-9\u4e00-\u9fa5→]+$", // 不包含特殊字符,可以中文和右箭头
	special1 : "^[A-Za-z0-9]+$",			// 字母或数字
	personName : "^([a-zA-Z\\u4E00-\\u9FA5\\uF900-\\uFA2D·\\.][a-zA-Z\\u4E00-\\u9FA5\\uF900-\\uFA2D\\s·\\.]*[a-zA-Z\\u4E00-\\u9FA5\\uF900-\\uFA2D·\\.])$", // 人的正式名字,只能字母中文和空格,且2端不为空
	// 时间范围1900-2500年 yyyy-MM-dd HH:mm
	timeLimit : "^(((^((19[0-9]{2})|(2[0-4][0-9]{2})|2500)(10|12|0[13578])(3[01]|[12][0-9]|0[1-9]))|(^((19[0-9]{2})|(2[0-4][0-9]{2})|2500)(11|0[469])(30|[12][0-9]|0[1-9]))|(^((19[0-9]{2})|(2[0-4][0-9]{2})|2500)(02)(2[0-8]|1[0-9]|0[1-9]))|(^([2468][048]00)(02)(29))|(^([3579][26]00)(02)(29))|(^([1][89][0][48])(02)(29))|(^([2-9][0-9][0][48])(02)(29))|(^([1][89][2468][048])(02)(29))|(^([2-9][0-9][2468][048])(02)(29))|(^([1][89][13579][26])(02)(29))|(^([2-9][0-9][13579][26])(02)(29)))(\\s([0-1][0-9]|2[0-3]):([0-5][0-9]))?)$",
	yearMmLimit : "^((19[0-9]{2})|(2[0-4][0-9]{2})|2500)(0[1-9]|1[012])$"
};

var aCity = {
	11 : "北京",
	12 : "天津",
	13 : "河北",
	14 : "山西",
	15 : "内蒙古",
	21 : "辽宁",
	22 : "吉林",
	23 : "黑龙江",
	31 : "上海",
	32 : "江苏",
	33 : "浙江",
	34 : "安徽",
	35 : "福建",
	36 : "江西",
	37 : "山东",
	41 : "河南",
	42 : "湖北",
	43 : "湖南",
	44 : "广东",
	45 : "广西",
	46 : "海南",
	50 : "重庆",
	51 : "四川",
	52 : "贵州",
	53 : "云南",
	54 : "西藏",
	61 : "陕西",
	62 : "甘肃",
	63 : "青海",
	64 : "宁夏",
	65 : "新疆",
	71 : "台湾",
	81 : "香港",
	82 : "澳门",
	91 : "国外"
};

function isCardID(sId) {
	var iSum = 0;
	if (!/^\d{17}(\d|x)$/i.test(sId))
		return "你输入的身份证长度或格式错误";
	sId = sId.replace(/x$/i, "a");
	if (aCity[parseInt(sId.substr(0, 2))] == null)
		return "你的身份证地区非法";
	sBirthday = sId.substr(6, 4) + "-" + Number(sId.substr(10, 2)) + "-"
			+ Number(sId.substr(12, 2));
	var d = new Date(sBirthday.replace(/-/g, "/"));
	if (sBirthday != (d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d
			.getDate()))
		return "身份证上的出生日期非法";
	for (var i = 17; i >= 0; i--)
		iSum += (Math.pow(2, i) % 11) * parseInt(sId.charAt(17 - i), 11);
	if (iSum % 11 != 1)
		return "你输入的身份证号非法";
	return true;// aCity[parseInt(sId.substr(0,2))]+","+sBirthday+","+(sId.substr(16,1)%2?"男":"女")
}

// 短时间，形如 (13:04:06)
function isTime(str) {
	var a = str.match(/^(\d{1,2})(:)?(\d{1,2})\2(\d{1,2})$/);
	if (a == null) {
		return false;
	}
	if (a[1] > 24 || a[3] > 60 || a[4] > 60) {
		return false;
	}
	return true;
}

// 短日期，形如 (2003-12-05)
function isDate(str) {
	var r = str.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/);
	if (r == null)
		return false;
	var d = new Date(r[1], r[3] - 1, r[4]);
	return (d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3] && d
			.getDate() == r[4]);
}

// 长时间，形如 (2003-12-05 13:04:06)
function isDateTime(str) {
	var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/;
	var r = str.match(reg);
	if (r == null)
		return false;
	var d = new Date(r[1], r[3] - 1, r[4], r[5], r[6], r[7]);
	return (d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3]
			&& d.getDate() == r[4] && d.getHours() == r[5]
			&& d.getMinutes() == r[6] && d.getSeconds() == r[7]);
}